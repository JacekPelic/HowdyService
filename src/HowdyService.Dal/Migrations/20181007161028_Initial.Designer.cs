// <auto-generated />
using System;
using HowdyService.Dal.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HowdyService.Dal.Migrations
{
    [DbContext(typeof(HowdyDbContext))]
    [Migration("20181007161028_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HowdyService.Dal.Entities.Anwser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("QuestionId");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Anwsers");

                    b.HasData(
                        new { Id = 1, QuestionId = 1, Text = "Dream On", Value = 1 },
                        new { Id = 2, QuestionId = 1, Text = "You Know", Value = 2 },
                        new { Id = 3, QuestionId = 1, Text = "Off the hook", Value = 3 },
                        new { Id = 4, QuestionId = 1, Text = "Hell yeah", Value = 4 },
                        new { Id = 5, QuestionId = 2, Text = "What it is, what it is", Value = 1 },
                        new { Id = 6, QuestionId = 2, Text = "Ace", Value = 2 },
                        new { Id = 7, QuestionId = 2, Text = "Primo", Value = 3 },
                        new { Id = 8, QuestionId = 2, Text = "Secundo", Value = 4 },
                        new { Id = 9, QuestionId = 3, Text = "Buzz Off", Value = 1 },
                        new { Id = 10, QuestionId = 3, Text = "Bitch'n", Value = 2 },
                        new { Id = 11, QuestionId = 3, Text = "Bangin", Value = 3 },
                        new { Id = 12, QuestionId = 3, Text = "Laaame", Value = 4 },
                        new { Id = 13, QuestionId = 4, Text = "Ok", Value = 1 },
                        new { Id = 14, QuestionId = 4, Text = "Pretty good", Value = 2 },
                        new { Id = 15, QuestionId = 4, Text = "Awsome", Value = 3 },
                        new { Id = 16, QuestionId = 4, Text = "And we have new student developer!", Value = 4 }
                    );
                });

            modelBuilder.Entity("HowdyService.Dal.Entities.Gif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GiphyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Gifs");

                    b.HasData(
                        new { Id = 1, GiphyId = "wh9Ftb014GmKQ", Name = "Css" },
                        new { Id = 2, GiphyId = "10bdAP4IOmoN7G", Name = "JavaScript" },
                        new { Id = 3, GiphyId = "ip2GZs8rLxt8k", Name = "JavaVsC++" },
                        new { Id = 4, GiphyId = "11CXAq0P8h50GI", Name = "Poker" }
                    );
                });

            modelBuilder.Entity("HowdyService.Dal.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new { Id = 1, Text = "Do you feel groovy?" },
                        new { Id = 2, Text = "How's it hanging?" },
                        new { Id = 3, Text = "Are you Jivin' yet?" },
                        new { Id = 4, Text = "How Well Jacek did on this challange?" }
                    );
                });

            modelBuilder.Entity("HowdyService.Dal.Entities.Anwser", b =>
                {
                    b.HasOne("HowdyService.Dal.Entities.Question", "Question")
                        .WithMany("Anwsers")
                        .HasForeignKey("QuestionId");
                });
#pragma warning restore 612, 618
        }
    }
}
